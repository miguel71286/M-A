{"ast":null,"code":"var _jsxFileName = \"/Users/miguelangelmanzano/Desktop/CODES M-A/React-Mongo/Frontend/src/pages/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport './Auth.css';\nimport Card from '../components/Card';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Auth(props) {\n  _s();\n\n  const {\n    gestionarAcceso\n  } = props; // función que usamos para pasar los datos del servidor a la App principal\n\n  const [tieneAcceso, setTieneAcceso] = useState(false); // variable de estado que indica si el usuario existe o no en la base de datos.\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm(); // hook del formulario para 'react-hook-form'\n\n  const gestorDeCambioDeModo = () => {\n    if (!tieneAcceso) {\n      setValue('Nombre', undefined);\n    }\n\n    setTieneAcceso(!tieneAcceso);\n  };\n\n  const onSubmit = async data => {\n    // Envío de los datos del formulario ( data ) al servidor\n    console.log(data);\n\n    if (!tieneAcceso) {\n      await axios.post('http://localhost:5000/api/usuarios/alta', {\n        // endpoint de la API de nuestro servidor\n        nombre: data.nombre,\n        // dato extraído del formulario\n        email: data.email,\n        // dato extraído del formulario\n        password: data.password // dato extraído del formulario\n\n      }).then(response => {\n        console.log('Usuario creado'); // Si se recibe este mensaje en consola es que se ha dado de alta correctamente\n\n        gestionarAcceso(response.data); // enviamos a la App la respuesta del servidor, que contiene el token creado por este, el e-mail y el password del usuario.\n      }).catch(error => {\n        console.log(error.response.data);\n      });\n    } else {\n      await axios.post('http://localhost:5000/api/usuarios/login', {\n        email: data.email,\n        password: data.password\n      }).then(response => {\n        console.log('Login Correcto');\n        gestionarAcceso(response.data); // enviamos a la App la respuesta del servidor, que contiene el token creado por este\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"authentication\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: tieneAcceso ? 'Login necesario' : 'Introduzca datos de alta'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"card\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [!tieneAcceso && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Nombre de Usuario.\",\n          ...register('nombre', {\n            required: true,\n            message: 'Requerido'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Email\",\n          ...register('email', {\n            required: true,\n            pattern: /^\\S+@\\S+$/i\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 5\n        }, this), errors.email && errors.email.type === 'required' && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Se requiere e-mail v\\xE1lido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, this), errors.email && errors.email.type === 'pattern' && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Se requiere e-mail v\\xE1lido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Contrase\\xF1a\",\n          ...register('password', {\n            required: true,\n            minLength: 6\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 5\n        }, this), errors.password && errors.password.type === 'required' && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Se requiere contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this), errors.password && errors.password.type === 'minLength' && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"M\\xEDnimo de 6 caracteres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-form\",\n          type: \"submit\",\n          children: [tieneAcceso ? 'ACCESO' : 'ALTA', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-cambia\",\n        onClick: gestorDeCambioDeModo,\n        children: [\"CAMBIAR A \", tieneAcceso ? 'ALTA' : 'ACCESO']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Auth, \"/lKJ5HvtLxL1i71HzzHdhc75cew=\", false, function () {\n  return [useForm];\n});\n\n_c = Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/miguelangelmanzano/Desktop/CODES M-A/React-Mongo/Frontend/src/pages/Auth.js"],"names":["React","useState","useForm","Card","axios","Auth","props","gestionarAcceso","tieneAcceso","setTieneAcceso","register","handleSubmit","setValue","formState","errors","gestorDeCambioDeModo","undefined","onSubmit","data","console","log","post","nombre","email","password","then","response","catch","error","required","message","pattern","type","minLength"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport './Auth.css';\r\nimport Card from '../components/Card';\r\nimport axios from 'axios';\r\n\r\nexport default function Auth(props) {\r\n\tconst { gestionarAcceso } = props; // función que usamos para pasar los datos del servidor a la App principal\r\n\tconst [tieneAcceso, setTieneAcceso] = useState(false); // variable de estado que indica si el usuario existe o no en la base de datos.\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tsetValue,\r\n\t\tformState: { errors },\r\n\t} = useForm(); // hook del formulario para 'react-hook-form'\r\n\r\n\tconst gestorDeCambioDeModo = () => { \r\n\t\tif (!tieneAcceso) {\r\n\t\t\tsetValue('Nombre', undefined);\r\n\t\t}\r\n\t\tsetTieneAcceso(!tieneAcceso);\r\n\t};\r\n\r\n\tconst onSubmit = async (data) => {\r\n\t\t// Envío de los datos del formulario ( data ) al servidor\r\n\t\tconsole.log(data);\r\n\t\tif (!tieneAcceso) {\r\n\t\t\tawait axios\r\n\t\t\t\t.post('http://localhost:5000/api/usuarios/alta', {\r\n\t\t\t\t\t// endpoint de la API de nuestro servidor\r\n\t\t\t\t\tnombre: data.nombre, // dato extraído del formulario\r\n\t\t\t\t\temail: data.email, // dato extraído del formulario\r\n\t\t\t\t\tpassword: data.password, // dato extraído del formulario\r\n\t\t\t\t})\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tconsole.log('Usuario creado'); // Si se recibe este mensaje en consola es que se ha dado de alta correctamente\r\n\t\t\t\t\tgestionarAcceso(response.data); // enviamos a la App la respuesta del servidor, que contiene el token creado por este, el e-mail y el password del usuario.\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(error.response.data);\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tawait axios\r\n\t\t\t\t.post('http://localhost:5000/api/usuarios/login', {\r\n\t\t\t\t\temail: data.email,\r\n\t\t\t\t\tpassword: data.password,\r\n\t\t\t\t})\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tconsole.log('Login Correcto');\r\n\t\t\t\t\tgestionarAcceso(response.data); // enviamos a la App la respuesta del servidor, que contiene el token creado por este\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t<Card className='authentication'>\r\n\t\t\t<h2>{tieneAcceso ? 'Login necesario' : 'Introduzca datos de alta'}</h2>\r\n\t\t\t<form className='card' onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t\t{!tieneAcceso && (\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Nombre de Usuario.'\r\n\t\t\t\t\t\t{...register('nombre', { required: true, message: 'Requerido' })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tplaceholder='Email'\r\n\t\t\t\t\t{...register('email', { required: true, pattern: /^\\S+@\\S+$/i })}\r\n\t\t\t\t/>\r\n\t\t\t\t{errors.email && errors.email.type === 'required' && (\r\n\t\t\t\t\t<span>Se requiere e-mail válido</span>\r\n\t\t\t\t)}\r\n\t\t\t\t{errors.email && errors.email.type === 'pattern' && (\r\n\t\t\t\t\t<span>Se requiere e-mail válido</span>\r\n\t\t\t\t)}\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tplaceholder='Contraseña'\r\n\t\t\t\t\t{...register('password', { required: true, minLength: 6 })}\r\n\t\t\t\t/>\r\n\t\t\t\t{errors.password && errors.password.type === 'required' && (\r\n\t\t\t\t\t<span>Se requiere contraseña</span>\r\n\t\t\t\t)}\r\n\t\t\t\t{errors.password && errors.password.type === 'minLength' && (\r\n\t\t\t\t\t<span>Mínimo de 6 caracteres</span>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<button className=\"btn-form\" type='submit'>{tieneAcceso ? 'ACCESO' : 'ALTA'} </button>\r\n\t\t\t</form>\r\n\t\t\t<button className=\"btn-cambia\" onClick={gestorDeCambioDeModo}>\r\n\t\t\t\tCAMBIAR A {tieneAcceso ? 'ALTA' : 'ACCESO'}\r\n\t\t\t</button>\r\n\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}